# ===========================================
# Copyright NeCTAR, May 2014, all rights reserved.
# 
# Licensed under the Apache License, Version 2.0 (the "License"); 
# you may not use this file except in compliance with the License. 
# You may obtain a copy of the License at
# 
# http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, 
# software distributed under the License is distributed on an "AS IS" BASIS, 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
# See the License for the specific language governing permissions 
# and limitations under the License.
# ===========================================
# java_heat.yml
# ===========================================
HeatTemplateFormatVersion: '2012-12-12'
Description: "A Provisioned Java Research VM"
Parameters: 
    ProjectName: 
        Description: "The name of the research project. Used to name the configuration directory and URL's"
        Type: "String"
        Default: "java_project"
    KeyName: 
        Description: "Name of an existing EC2 KeyPair to enable SSH access to the instance. "
        Type: "String"
        Default: "richardr_on_nectar"
    InstanceType:
        Description: "The size of the VM. "
        Type: String
        Default: "m1.small"
        AllowedValues:
            - m1.small
            - m1.medium
            - m1.large
            - m1.xlarge
            - m1.xxlarge
    ImageId:
        Description: "The base VM image used to build the cluster. "
        Type: String
        # Customised Ubuntu 12.04 image on NeCTAR
        # Snapshot called heat_hadoop_seed_29Apr2014.
        # Made by running sudo apt-get install python-setuptools
        # Add more image options later.
        Default: c64cacf2-c269-4a95-aae6-7f1a3913f9eb
        #Default: "ubuntu-12.04"
        #AllowedValues: ["ubuntu-12.04","ubuntu-12.4"]
    AvailabilityZone: 
        Description: "Physical location of the running cluster. "
        Type: String
        Default: "sa"
        AllowedValues:
            - NCI
            - melbourne
            - melbourne-np
            - melbourne-qh2
            - qld
            - sa
    BaseDomain: 
        Description: "DynDNS base domain name. Used to synthesise server domain name. "
        Type: String
        Default: "doesntexist.org"
#Mappings:
#    InstanceId:
#        'ubuntu-12.04': {ImageId: c64cacf2-c269-4a95-aae6-7f1a3913f9eb}
Resources: 
    # http://docs.openstack.org/developer/heat/template_guide/cfn.html#AWS::EC2::SecurityGroup
    DefaultSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Standard firewall rules
            SecurityGroupIngress:
                - {IpProtocol: icmp, FromPort: '-1', ToPort: '-1', CidrIp : 0.0.0.0/0}
                - {IpProtocol: tcp, FromPort: '22', ToPort: '22', CidrIp: 0.0.0.0/0}
                - {IpProtocol: tcp, FromPort: '80', ToPort: '80', CidrIp: 0.0.0.0/0}
                - {IpProtocol: tcp, FromPort: '443', ToPort: '443', CidrIp: 0.0.0.0/0}
    # http://docs.openstack.org/developer/heat/template_guide/cfn.html#AWS::EC2::Instance
    # To get the node IP address see: https://wiki.openstack.org/wiki/Heat/ApplicationDeployment
    JavaServer: 
        Type: "AWS::EC2::Instance"
        Properties: 
            KeyName: {Ref: KeyName}
            #ImageId: {Fn::FindInMap: [InstanceId, {Ref: ImageName}, ImageId]}
            ImageId:  {Ref: ImageId}
            InstanceType: {Ref: InstanceType}
            AvailabilityZone: {Ref: AvailabilityZone}
            SecurityGroups: 
                - {Ref: DefaultSecurityGroup}
            UserData:
                Fn::Base64:
                    Fn::Replace:
                      - _project_name_: {Ref: ProjectName}
                        _base_domain_: {Ref: BaseDomain}
                      - |
                        #!/bin/bash -v
                        apt-get update; apt-get upgrade
                        updatedb
                        cd /tmp
                        wget https://raw.githubusercontent.com/rrothwell/heat_research/master/install_java.sh
                        chmod u+x install_java.sh
                        wget https://raw.githubusercontent.com/rrothwell/heat_research/master/install_java_server.sh
                        chmod u+x install_java_server.sh
                        export project_name=_project_name_
                        export research_base_domain=_base_domain_
                        export research_master_name=_research_master_name_
                        export research_master_domain=_research_master_name_._base_domain_
                        export research_instance_ip=`wget -qO -  http://169.254.169.254/latest/meta-data/local-ipv4`
                        export research_instance_hostname=`hostname`
                        export research_instance_name=_research_master_name_
                        export research_instance_domain=_research_master_name_._base_domain_
                        ./install_java_server.sh
                        # Find this flag file in /tmp
                        touch "installation_finished" 
# TODO Add scripts to install Tomcat.                                               
Outputs: 
    ServerNodeIp: 
        Description: "Login via ssh using this command: "
        Value: 
            Fn::Join: 
                - ""
                - 
                    - "ssh -i /path/to/private/key/file.pem root@"
                    - 
                        Fn::GetAtt: 
                            - "JavaServer"
                            - "PublicIp"
    DynDNSDomainName: 
        Description: "Enter this value for the domain name of the Java server into the DynDNS account: "
        Value: 
            Fn::Join: 
                - ""
                - 
                    - {Ref: ProjectName}
                    - "."
                    - {Ref: BaseDomain}
                    - ": "
                    - 
                        Fn::GetAtt: 
                            - "JavaServer"
                            - "PublicIp"
